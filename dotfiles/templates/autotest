#require 'autotest/fsevent'
module Autotest::Growl
  	
  def self.growl title, msg, img, pri=0, stick=""
    system "growlnotify -H localhost --image #{img} -p #{pri} -m #{msg.inspect} #{title} #{stick}" #-n autotest
  end

  Autotest.add_hook :run_command do
    print "\n"*2 + '-'*80 + "\n"*2
    print "\e[2J\e[f"   # clear the terminal
  end

  Autotest.add_hook :ran_command do |autotest|
    name = Dir.pwd.split(/\//).last
    if autotest.results.grep(/Finished in/).empty?
      growl "Project <<#{name}>> cannot run tests", '', "~/.autotest_images/ruby_grey.png"
    else
      filtered = autotest.results.grep(/\d+\s.*examples?/)
      output = filtered.empty? ? '' : filtered.last.slice(/(\d+)\s.*examples?,\s(\d+)\s.*failures?(?:,\s(\d+)\s.*pending)?/)
      if output =~ /[1-9]\d*\sfailures?/
        growl "Project <<#{name}>> fails some tests", "#{output}", "~/.autotest_images/ruby_red.png"
      elsif output =~ /pending/
        growl "Project <<#{name}>> is not fully implemented yet", "#{output}", "~/.autotest_images/ruby_yellow.png"
      else
        growl "Project <<#{name}>> passes all tests", "#{output}", "~/.autotest_images/ruby_green.png"
      end
    end
  end

end

Autotest.add_hook :initialize do |autotest|
    %w{.svn .hg .git vendor}.each {|exception| autotest.add_exception(exception) }
end
